title: Scene Classification Training
version: 1.0.0
description: fine-tuning keras model using custom data for scene prediction
long_description: Scene Classification is classifying the background scenery via a keras model. The Model used here is Vgg16_365 which is a pretrained VGG16 model on Places-365 dataset. Custom training is done for different categories or getting better accuracy.
author: "cnvrg"
author_email: "libhub@cnvrg.io"

tags:
  - training
tasks:
  - title: S3 Connector
    top: 300
    left: 0

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: s3-connector
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python s3-connector.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg/cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: endpoint
        type: 'categorical'
        values:
          - 'http://s3.amazonaws.com download'
      - key: bucketname
        type: 'categorical'
        values:
          - 'libhub-readme'
      - key: localdir
        type: 'categorical'
        values:
          - '/cnvrg'
      - key: prefix
        type: 'categorical'
        values:
          - 'scene_detection/'
    
  - title: Train
    top: 300
    left: 250

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: scene-classification-train
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python3 train.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg/cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: img_dir
        type: 'categorical'
        values:
           - '/input/s3_connector/scene_detection/'
      - key: epochs
        type: 'categorical'
        values:
           - '50'
      - key: training_args
        type: 'categorical'
        values:
           - '30,0.15,0.2,0.2,0.15'
      - key: dimensions
        type: 'discrete'
        values:
           - '123.68,116.779,103.939'
      - key: target_size
        type: 'discrete'
        values:
           - '224.00,224.00'
      - key: loss
        type: 'categorical'
        values:
           - 'categorical_crossentropy'
      - key: metrics
        type: 'categorical'
        values:
           - 'accuracy'
      - key: lr
        type: 'discrete'
        values:
           - '1e-4'
      - key: momentum
        type: 'discrete'
        values:
           - '0.9'
  - title: Inference
    top: 300
    left: 500

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: deploy

    # The library data
    library: scene-classification-inference
    library_version: 1.0.0

    command: python3 predict.py
    kind: webservice

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg/cnvrg:v5.0
    language: python3
    accept_files: false

    file_name: predict.py # the entrypoint file name
    function_name: predict # the entrypoint function
    prep_file: '' # preprocess file name
    prep_function: '' # preprocess function
    input_example:
      img: file
    input_schema:
      img: file
    output_schema: {}

relations:
  - from: S3 Connector
    to: Train
  - from: Train
    to: Inference
